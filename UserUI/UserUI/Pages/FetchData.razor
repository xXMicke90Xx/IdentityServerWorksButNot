@page "/fetchdata"
<PageTitle>Weather forecast</PageTitle>
@using System.Net.Http.Headers
@using Microsoft.AspNetCore.Authentication
@using Newtonsoft.Json
@using UserUI.Data
@inject WeatherForecastService ForecastService
@inject HttpClient client
@inject IHttpContextAccessor HttpContextAccessor
@using RestSharp.Authenticators.OAuth2;
@using RestSharp;

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        RestRequest request = new RestRequest("https://localhost:6001/Weather");
        RestClient client = new RestClient();

        
        var accessToken = await HttpContextAccessor.HttpContext.GetTokenAsync("access_token");
        client.Authenticator = new OAuth2AuthorizationRequestHeaderAuthenticator(accessToken, "Bearer");
        string s = "";

        try{
            RestResponse response = client.Execute(request);
            s = response.Content;
        }
        catch{

        }
        

        forecasts = JsonConvert.DeserializeObject<WeatherForecast[]>(s);

    }
}
